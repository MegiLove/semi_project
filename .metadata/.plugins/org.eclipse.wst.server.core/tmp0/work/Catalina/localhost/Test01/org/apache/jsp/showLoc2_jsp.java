/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.46
 * Generated at: 2021-12-22 10:57:12 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.sist.vo.LocationVO;
import java.util.ArrayList;
import com.sist.dao.LocationDAO;

public final class showLoc2_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.sist.dao.LocationDAO");
    _jspx_imports_classes.add("com.sist.vo.LocationVO");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"EUC-KR\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");

	LocationDAO dao = new LocationDAO();
	ArrayList<LocationVO> list = dao.listAll();
	
	String []province_arr = {"서울","경기","인천","강원","대전","세종","충남","충북","부산","울산","경남","경북","대구","광주","전남","전북","제주"};
	String []province_id = {"seoul","gyeonggi","incheon","gangwon","daejeon","sejong",
								"chungnam","chungbuk","busan","ulsan","gyeongnam","gyeongbuk","daegu",
								"gwangju","jeonnam","jeonbuk","jeju"};
	String []province_db = {"서울특별시","경기도","인천광역시","강원도","대전광역시","세종특별자치시",
							"충청남도","충청북도","부산광역시","울산광역시","경상남도","경상북도","대구광역시",
							"광주광역시","전라남도","전라북도","제주특별자치도"};
	String []province_show = {"ShowSeoul()","ShowGyeonggi()","ShowIncheon()","ShowGangwon()","ShowDaejeon()","ShowSejong()",
								"ShowChungnam()","ShowChungbuk()","ShowBusan()","ShowUlsan()","ShowGyeongnam()","ShowGyeongbuk()","ShowDaegu()",
								"ShowGwangju()","ShowJeonnam()","ShowJeonbuk()","ShowJeju()"};

      out.write("\r\n");
      out.write("\r\n");
      out.write("	<h2 class=\"skip\">- 관심 지역 관리 -</h2>\r\n");
      out.write("\r\n");
 for(int i=0; i<=16; i++){
		
      out.write("\r\n");
      out.write("			<fieldset>\r\n");
      out.write("				<div type=\"button\" onClick=\"");
      out.print(province_show[i] );
      out.write('"');
      out.write('>');
      out.print(province_arr[i] );
      out.write("</div>\r\n");
      out.write("				<div style=\"display:none\" id=\"");
      out.print(province_id[i]);
      out.write("\">\r\n");
      out.write("					<ul id=\"district\" class=\"listDistrict\">\r\n");
      out.write("						");

							for(LocationVO l : list){
								String province = l.getProvince();
								if(province.equals(province_db[i])){
								
      out.write("\r\n");
      out.write("									<tr>\r\n");
      out.write("										<td>");
      out.print(l.getDistrict() );
      out.write(" </td>\r\n");
      out.write("									</tr>\r\n");
      out.write("								");

								}
							}
						
      out.write("	\r\n");
      out.write("					</ul>\r\n");
      out.write("				</div>\r\n");
      out.write("			</fieldset>\r\n");
      out.write(" 		");
 
	}

      out.write(" \r\n");
      out.write("	\r\n");
      out.write("	<script>\r\n");
 for(int i=0; i<=16; i++){
	
      out.write(" \r\n");
      out.write("	function ");
      out.print(province_show[i] );
      out.write("{\r\n");
      out.write("		if(document.getElementById(\"");
      out.print(province_id[i]);
      out.write("\").style.display == \"block\"){\r\n");
      out.write("			document.getElementById(\"");
      out.print(province_id[i]);
      out.write("\").style.display=\"none\";\r\n");
      out.write("		}\r\n");
      out.write("		else{\r\n");
      out.write("			document.getElementById(\"");
      out.print(province_id[i]);
      out.write("\").style.display=\"block\"\r\n");
      out.write("		}\r\n");
      out.write("	}\r\n");
      out.write("	");

	}

      out.write(" 	\r\n");
      out.write("	</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
